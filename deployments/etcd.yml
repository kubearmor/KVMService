apiVersion: v1
kind: Service
metadata:
  name: etcd-client
  namespace: kube-system
spec:
  ports:
  - name: etcd-client-port
    port: 2379
    protocol: TCP
    targetPort: 2379
  selector:
    app: etcd

---

apiVersion: v1
kind: Pod
metadata:
  labels:
    app: etcd
    etcd_node: etcd0
  name: etcd0
  namespace: kube-system
spec:
  containers:
  - command:
    - /usr/local/bin/etcd
    - --name
    - etcd0
    - --initial-advertise-peer-urls
    - http://etcd0:2380
    - --listen-peer-urls
    - http://0.0.0.0:2380
    - --listen-client-urls
    - https://0.0.0.0:2379
    - --advertise-client-urls
    - https://etcd0:2379
    - --initial-cluster
    - etcd0=http://etcd0:2380
    - --initial-cluster-state
    - new
    - --cert-file
    - "/var/certs/tls.crt"
    - --key-file
    - "/var/certs/tls.key"
    - --trusted-ca-file
    - "/var/ca-certs/ca.cert"
    image: quay.io/coreos/etcd:latest
    name: etcd0
    securityContext:
      privileged: true
    ports:
    - containerPort: 2379
      name: client
      protocol: TCP
    - containerPort: 2380
      name: server
      protocol: TCP
    volumeMounts:
    - name: server-certs
      mountPath: /var/certs/
      readOnly: true
    - name: ca-certs
      mountPath: /var/ca-certs/
      readOnly: true
  restartPolicy: Always
  volumes:
    - name: server-certs
      secret:
        secretName: server-certs
    - name: ca-certs
      secret:
        secretName: ca-cert

---

apiVersion: v1
kind: Service
metadata:
  labels:
    etcd_node: etcd0
  name: etcd0
  namespace: kube-system
spec:
  ports:
  - name: client
    port: 2379
    protocol: TCP
    targetPort: 2379
  - name: server
    port: 2380
    protocol: TCP
    targetPort: 2380
  selector:
    etcd_node: etcd0
