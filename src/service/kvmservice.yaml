apiVersion: v1
kind: ServiceAccount
metadata:
  name: kvmservice
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kvmservice
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: kvmservice
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: kvmservice
  namespace: kube-system
spec:
  selector:
    kvmservice-app: kvmservice
  type: LoadBalancer
  ports:
  - port: 32770
    protocol: TCP
    targetPort: 32770
---
apiVersion: apps/v1
  #kind: DaemonSet
kind: Deployment
metadata:
  name: kvmservice
  namespace: kube-system
  labels:
    kvmservice-app: kvmservice
spec:
  replicas: 1
  selector:
    matchLabels:
      kvmservice-app: kvmservice
  template:
    metadata:
      labels:
        kvmservice-app: kvmservice
      annotations:
        container.apparmor.security.beta.kubernetes.io/kvmservice: unconfined
    spec:
      serviceAccountName: kvmservice
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - operator: Exists
      hostPID: true
      hostNetwork: true
      restartPolicy: Always
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: kvmservice
        image: kubearmor/kvmservice:latest
        imagePullPolicy: Always
        securityContext:
          privileged: true
        args: ["-port=32770"]
        env:
          - name: ETCD_NAMESPACE
            value: "kube-system"
          - name: KVMSERVICE_NAMESPACE
            value: "kube-system"
        ports:
        - containerPort: 40400
          hostPort: 0
        volumeMounts:
        - name: docker-sock-path # docker (read-only)
          mountPath: /var/run/docker.sock
          readOnly: true
        - name: usr-src-path # BPF (read-only)
          mountPath: /usr/src
          readOnly: true
        - name: lib-modules-path # BPF (read-only)
          mountPath: /lib/modules
          readOnly: true
        - name: sys-fs-bpf-path # BPF (read-write)
          mountPath: /sys/fs/bpf
        - name: sys-kernel-debug-path # BPF (read-write)
          mountPath: /sys/kernel/debug
            # - name: etc-apparmor-d-path # AppArmor (read-write)
            #   mountPath: /etc/apparmor.d
        - name: os-release-path # OS (read-only)
          mountPath: /media/root/etc/os-release
          readOnly: true
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              if [ -z $(pgrep kvmservice) ]; then
                exit 1;
              fi;
          initialDelaySeconds: 60
          periodSeconds: 10
        terminationMessagePolicy: File
        terminationMessagePath: /dev/termination-log
      terminationGracePeriodSeconds: 30
      volumes:
      - name: docker-sock-path # docker
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: usr-src-path # BPF
        hostPath:
          path: /usr/src
          type: Directory
      - name: lib-modules-path # BPF
        hostPath:
          path: /lib/modules
          type: Directory
      - name: sys-fs-bpf-path # BPF
        hostPath:
          path: /sys/fs/bpf
          type: Directory
      - name: sys-kernel-debug-path # BPF
        hostPath:
          path: /sys/kernel/debug
          type: Directory
            #- name: etc-apparmor-d-path # AppArmor
            #  hostPath:
            #    path: /etc/apparmor.d
            #    type: DirectoryOrCreate
      - name: os-release-path # OS
        hostPath:
          path: /etc/os-release
          type: File
